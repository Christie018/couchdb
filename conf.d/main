#!/bin/sh -ex

ADMIN_NAME=admin
ADMIN_PASS=turnkey

SRC=/usr/local/src
WEBCP=/opt/tklwebcp

# service couchdb stop # doesn't work, below is required to exit
stop_couchdb() {
    kill $(pgrep -u couchdb beam*)
    while [ -n "$(pgrep -u couchdb beam*)" ]; do
        sleep 1
    done
    kill $(pgrep epmd)
}

debconf-set-selections <<EOF
couchdb	couchdb/adminpass	password $ADMIN_PASS
couchdb	couchdb/adminpass_again	password $ADMIN_PASS
couchdb	couchdb/postrm_remove_databases	boolean	false
couchdb	couchdb/have_1x_databases	note
couchdb	couchdb/error_setting_password	error
couchdb	couchdb/bindaddress	string	127.0.0.1
couchdb	couchdb/cookie	string	monster
couchdb	couchdb/adminpass_mismatch	error
couchdb	couchdb/nodename	string	couchdb@localhost
couchdb	couchdb/mode	select	standalone
EOF

apt-get update
apt-get install --assume-yes couchdb

# set admin password (will be hashed) and secret
CONF=/opt/couchdb/etc/local.ini
sed -i "s|^;admin =.*|$ADMIN_NAME = $ADMIN_PASS|" \
    '/opt/couchdb/etc/local.d/10-admins.ini'
cat >>$CONF<<EOF

[couch_httpd_auth]
secret = $(mcookie)
EOF

# raise iterations and min_iterations from the absurdly low `10`
# to a bare minimum of `1000`
sed -i "/^\[chttpd\]/ aiterations = 1000" $CONF
sed -i "/^\[chttpd\]/ amin_iterations = 1000" $CONF
sed -i "/^\[couch_httpd_auth\]/ aiterations = 1000" $CONF
sed -i "/^\[couch_httpd_auth\]/ amin_iterations = 1000" $CONF

service couchdb start
update-rc.d couchdb defaults

# configure nginx
rm /etc/nginx/sites-enabled/default
ln -s /etc/nginx/sites-available/couchdb /etc/nginx/sites-enabled/couchdb

# install couchapp
[ "$FAB_HTTP_PROXY" ] && export HTTP_PROXY=$FAB_HTTP_PROXY
pip install couchapp
unset HTTP_PROXY

# create tklwebcp
service couchdb start

mkdir -p $WEBCP/_attachments
mv /var/www/* $WEBCP/_attachments
rm $WEBCP/_attachments/images/filemanager.png
rm $WEBCP/_attachments/images/adminer.png

cd $WEBCP
echo -n "_design/tklwebcp" > _id

# ensure these required backend databases exist
curl -X PUT http://$ADMIN_NAME:$ADMIN_PASS@127.0.0.1:5984/_users
curl -X PUT http://$ADMIN_NAME:$ADMIN_PASS@127.0.0.1:5984/_replicator
curl -X PUT http://$ADMIN_NAME:$ADMIN_PASS@127.0.0.1:5984/_global_changes

couchapp init
couchapp push --force . http://$ADMIN_NAME:$ADMIN_PASS@127.0.0.1:5984/tklwebcp

## NOTE the following lines allow readonly access to tklwebcp by ANYONE, but write access
##  only to users with the _admin role
# set perms for tklwebcp, this should only remove the default `_admin` role from members
# effectively this opens non-destructive read/write perms to the world
curl -X PUT "http://$ADMIN_NAME:$ADMIN_PASS@127.0.0.1:5984/tklwebcp/_security" \
    -d '{"members":{"roles":[]},"admins":{"roles":["_admin"]}}'
# add validation function which denies write access to the tklwebcp from anyone except for an admin
curl -X PUT "http://$ADMIN_NAME:$ADMIN_PASS@127.0.0.1:5984/tklwebcp/_design/readonly_validate" \
    -d "{ \"_id\": \"_design/readonly_validate\", \
    \"validate_doc_update\": \"$(cat /usr/local/src/validate_func.js | tr -d '\r\n\t')\"}"
rm /usr/local/src/validate_func.js

curl http://$ADMIN_NAME:$ADMIN_PASS@127.0.0.1:5984/tklwebcp/
sleep 5 # couchdb delayed commits
curl http://$ADMIN_NAME:$ADMIN_PASS@127.0.0.1:5984/tklwebcp/

stop_couchdb
